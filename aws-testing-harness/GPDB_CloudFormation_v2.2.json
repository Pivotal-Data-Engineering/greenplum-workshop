{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description":"Pivotal Greenplum on AWS --AWSMP::e2ae8dfc-70b4-4078-af09-dc6a1926b7ee::dcd87f05-6122-4b1f-be0a-96596dae7ae7",
	
	"Outputs" : { 
		"AvailabiltiyZone" : { 
			"Value" : { "Ref":"AvailabilityZone" },
			"Description" : "Parameter: AvailabilityZone" },
		"KeyName" : { 
			"Value" : { "Ref":"KeyName" },
			"Description" : "Parameter: KeyName" },
		"SSHLocation" : { 
			"Value" : { "Ref":"SSHLocation" },
			"Description" : "Parameter: SSHLocation" },
		"ClusterNodeInstanceType" : { 
			"Value" : { "Ref":"ClusterNodeInstanceType" },
			"Description" : "Parameter: ClusterNodeInstanceType" },
		"ClusterInstanceCount" : { 
			"Value" : { "Ref":"ClusterInstanceCount" },
			"Description" : "Parameter: ClusterInstanceCount" },
		"AdditionalInstalls" : { 
			"Value" : "/opt/pivotal/greenplum/optional",
			"Description" : "On Master Host" },
		"ValidationTesting" : { 
			"Value" : "/opt/pivotal/greenplum/validation",
			"Description" : "Perf & Benchmarks (Master Host)" },
		"Port" : { 
			"Value" : "5432",
			"Description" : "Database listening port" },
		"Documentation" : { 
			"Value" : "https://gpdb.docs.pivotal.io" },
		"AdminUserName" : { 
			"Value" : "gpadmin",
			"Description" : "Used for ssh and database" },
		"MonitorUserName" : { 
			"Value" : "gpmon",
			"Description" : "Used for Command Center" },
		"MasterHost" : { 
			"Value" : { "Fn::GetAtt" : [ "MasterHostOutput", "Data" ]}, 
			"Condition":"EnableWaitConditions",
			"Description" : "Client connections" },
		"Password" : { 
			"Value" : { "Fn::GetAtt" : [ "PasswordOutput", "Data" ]}, 
			"Condition":"EnableWaitConditions",
			"Description" : "For Admin and Monitor Users" },
		"CommandCenterURL" : { 
			"Value" : { "Fn::GetAtt" : [ "GPCCOutput", "Data" ]}, 
			"Condition":"EnableWaitConditions",
			"Description" : "Command Center URL" }
	},
	"Parameters": {
		"AvailabilityZone": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Availability Zone in your region",
			"MinLength": "1",
			"ConstraintDescription": "Select an existing Availability Zone" },
		"KeyName": {
			"Type": "AWS::EC2::KeyPair::KeyName", 	
			"Description": "Existing EC2 KeyPair to access this cluster", 
			"MinLength": "1", 
			"ConstraintDescription": "Select an existing keypair" },
		"SSHLocation": { 
			"Type": "String", 
			"Description": "IP address range to access the GPDB cluster. Set the value to 0.0.0.0/0 for access from entire Internet.", 
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})", 
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x." },
		"ClusterNodeInstanceType": { 
			"Type": "String", 
			"Description": "Pick Instance Type with Storage Option",
			"Default": "r4.xlarge-EBS-6TB",
			"AllowedValues": [ "d2.xlarge-Ephemeral-6TB", "d2.2xlarge-Ephemeral-12TB",
						"d2.4xlarge-Ephemeral-24TB", "d2.8xlarge-Ephemeral-48TB", 
						"d2.xlarge-EBS-6TB", "d2.2xlarge-EBS-12TB", 
						"d2.4xlarge-EBS-24TB", "d2.8xlarge-EBS-48TB", 
						"d2.xlarge-EBS-Encrypted-6TB", "d2.2xlarge-EBS-Encrypted-12TB",
						"d2.4xlarge-EBS-Encrypted-24TB", "d2.8xlarge-EBS-Encrypted-48TB",
						"r4.xlarge-EBS-6TB", "r4.2xlarge-EBS-12TB", "r4.4xlarge-EBS-24TB",
						"r4.8xlarge-EBS-48TB", "r4.16xlarge-EBS-48TB", 
						"r4.xlarge-EBS-Encrypted-6TB", "r4.2xlarge-EBS-Encrypted-12TB", "r4.4xlarge-EBS-Encrypted-24TB",
						"r4.8xlarge-EBS-Encrypted-48TB", "r4.16xlarge-EBS-Encrypted-48TB" ], 
			"ConstraintDescription": "Must be a valid EC2 instance type." },
		"ClusterInstanceCount": { 
			"Type": "Number", 
			"Description": "Maximum Number of Nodes in the Pivotal GreenplumDB cluster.", 
			"Default": 6, 
			"AllowedValues": [ 1, 4, 6, 10, 14, 18 ] },
		"CommandCenter": {
			"Type": "String",
			"Description": "Optional Installation of Greenplum Command Center",
			"Default": "Skip",
			"AllowedValues": [ "Skip", "Install" ] },
		"MADlib": {
			"Type": "String",
			"Description": "Optional Installation of MADlib",
			"Default": "Skip",
			"AllowedValues": [ "Skip", "Install" ] },
		"PLR": {
			"Type": "String",
			"Description": "Optional Installation of PL/R",
			"Default": "Skip",
			"AllowedValues": [ "Skip", "Install" ] },
		"PostGIS": {
			"Type": "String",
			"Description": "Optional Installation of PostGIS",
			"Default": "Skip",
			"AllowedValues": [ "Skip", "Install" ] }
	},
	"Mappings": {
		"AMIMapping": {
			"ap-northeast-1": { "64":"ami-05027563" },
			"ap-northeast-2": { "64":"ami-f6cc6e98" },
			"ap-south-1": { "64":"ami-d5b0e3ba" },
			"ap-southeast-1": { "64":"ami-a3ecaadf" },
			"ap-southeast-2": { "64":"ami-99f308fb" },
			"ca-central-1": { "64":"ami-ab9014cf" },
			"eu-central-1": { "64":"ami-4f2e4a20" },
			"eu-west-1": { "64":"ami-3a492043" },
			"eu-west-2": { "64":"ami-60af4a07" },
			"eu-west-3": { "64":"ami-94a016e9" },
			"sa-east-1": { "64":"ami-1f0b4573" },
			"us-east-1": { "64":"ami-9d8986e7" },
			"us-east-2": { "64":"ami-3190a554" },
			"us-west-1": { "64":"ami-eb9d928b" },
			"us-west-2": { "64":"ami-7697130e" },
			"us-gov-west-1": { "64":"ami-bc1993dd" }
		},
		"InstanceTypeMapping": {
			"d2.xlarge-Ephemeral-6TB": { "Type":"d2.xlarge", "Tenancy":"default", "RaidGroups":"1", "SegsPerHost":"2", "VmemProtectLimit":"8700", "Swap":"6" },
			"d2.2xlarge-Ephemeral-12TB": { "Type":"d2.2xlarge", "Tenancy":"default", "RaidGroups":"2", "SegsPerHost":"4", "VmemProtectLimit":"8800", "Swap":"8" },
			"d2.4xlarge-Ephemeral-24TB": { "Type":"d2.4xlarge", "Tenancy":"default", "RaidGroups":"4", "SegsPerHost":"8", "VmemProtectLimit":"8800", "Swap":"11" },
			"d2.8xlarge-Ephemeral-48TB": { "Type":"d2.8xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"12", "VmemProtectLimit":"11700", "Swap":"16" },
			"d2.xlarge-EBS-6TB": { "Type":"d2.xlarge", "Tenancy":"default", "RaidGroups":"1", "SegsPerHost":"2", "VmemProtectLimit":"8700", "Swap":"6" },
			"d2.2xlarge-EBS-12TB": { "Type":"d2.2xlarge", "Tenancy":"default", "RaidGroups":"2", "SegsPerHost":"4", "VmemProtectLimit":"8800", "Swap":"8" },
			"d2.4xlarge-EBS-24TB": { "Type":"d2.4xlarge", "Tenancy":"default", "RaidGroups":"4", "SegsPerHost":"8", "VmemProtectLimit":"8800", "Swap":"11" },
			"d2.8xlarge-EBS-48TB": { "Type":"d2.8xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"12", "VmemProtectLimit":"11700", "Swap":"16" },
			"r4.xlarge-EBS-6TB": { "Type":"r4.xlarge", "Tenancy":"default", "RaidGroups":"1", "SegsPerHost":"2", "VmemProtectLimit":"8700", "Swap":"6" },
			"r4.2xlarge-EBS-12TB": { "Type":"r4.2xlarge", "Tenancy":"default", "RaidGroups":"2", "SegsPerHost":"4", "VmemProtectLimit":"8800", "Swap":"8" },
			"r4.4xlarge-EBS-24TB": { "Type":"r4.4xlarge", "Tenancy":"default", "RaidGroups":"4", "SegsPerHost":"8", "VmemProtectLimit":"8800", "Swap":"11" },
			"r4.8xlarge-EBS-48TB": { "Type":"r4.8xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"12", "VmemProtectLimit":"11700", "Swap":"16" },
			"r4.16xlarge-EBS-48TB": { "Type":"r4.16xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"20", "VmemProtectLimit":"14000", "Swap":"22" },
			"d2.xlarge-EBS-Encrypted-6TB": { "Type":"d2.xlarge", "Tenancy":"default", "RaidGroups":"1", "SegsPerHost":"2", "VmemProtectLimit":"8700", "Swap":"6" },
			"d2.2xlarge-EBS-Encrypted-12TB": { "Type":"d2.2xlarge", "Tenancy":"default", "RaidGroups":"2", "SegsPerHost":"4", "VmemProtectLimit":"8800", "Swap":"8" },
			"d2.4xlarge-EBS-Encrypted-24TB": { "Type":"d2.4xlarge", "Tenancy":"default", "RaidGroups":"4", "SegsPerHost":"8", "VmemProtectLimit":"8800", "Swap":"11" },
			"d2.8xlarge-EBS-Encrypted-48TB": { "Type":"d2.8xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"12", "VmemProtectLimit":"11700", "Swap":"16" },
			"r4.xlarge-EBS-Encrypted-6TB": { "Type":"r4.xlarge", "Tenancy":"default", "RaidGroups":"1", "SegsPerHost":"2", "VmemProtectLimit":"8700", "Swap":"6" },
			"r4.2xlarge-EBS-Encrypted-12TB": { "Type":"r4.2xlarge", "Tenancy":"default", "RaidGroups":"2", "SegsPerHost":"4", "VmemProtectLimit":"8800", "Swap":"8" },
			"r4.4xlarge-EBS-Encrypted-24TB": { "Type":"r4.4xlarge", "Tenancy":"default", "RaidGroups":"4", "SegsPerHost":"8", "VmemProtectLimit":"8800", "Swap":"11" },
			"r4.8xlarge-EBS-Encrypted-48TB": { "Type":"r4.8xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"12", "VmemProtectLimit":"11700", "Swap":"16" },
			"r4.16xlarge-EBS-Encrypted-48TB": { "Type":"r4.16xlarge", "Tenancy":"dedicated", "RaidGroups":"4", "SegsPerHost":"14000", "VmemProtectLimit":"14000", "Swap":"22" }
		},
		"TimeoutMapping": {
			"1": { "CreationTimeout":"PT10M", "Timeout":"2400" },
			"4": { "CreationTimeout":"PT10M", "Timeout":"2400" },
			"6": { "CreationTimeout":"PT20M", "Timeout":"3000" },
			"10": { "CreationTimeout":"PT30M", "Timeout":"3600" },
			"14": { "CreationTimeout":"PT45M", "Timeout":"4500" },
			"18": { "CreationTimeout":"PT60M", "Timeout":"5400" }
		}
	},
	"Conditions": {
		"EnableWaitConditions":{ "Fn::Equals":[ "1", "1" ] },
		"IsEncrypted": { "Fn::Or" : [ 
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-EBS-Encrypted-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.4xlarge-EBS-Encrypted-24TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.8xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.2xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.4xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.8xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.16xlarge-EBS-Encrypted-48TB" ]} ]},
		"UseEphemeral": { "Fn::Or" : [ 
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-Ephemeral-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-Ephemeral-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.4xlarge-Ephemeral-24TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.8xlarge-Ephemeral-48TB" ]} ]},
		"NoDiskC": { "Fn::Or" : [
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-Encrypted-6TB" ]} ]},
		"NoDiskD": { "Fn::Or" : [
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-EBS-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-EBS-Encrypted-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.2xlarge-EBS-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.2xlarge-EBS-Encrypted-12TB" ]} ]},
		"NoDiskE": { "Fn::Or" : [
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.xlarge-EBS-Encrypted-6TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-EBS-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.2xlarge-EBS-Encrypted-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.2xlarge-EBS-12TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.2xlarge-EBS-Encrypted-12TB" ]} ]},
		"LargeDisk": { "Fn::Or" : [ 
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.8xlarge-EBS-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "d2.8xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.8xlarge-EBS-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.8xlarge-EBS-Encrypted-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.16xlarge-EBS-48TB" ]},
					{"Fn::Equals":[ {"Ref": "ClusterNodeInstanceType"}, "r4.16xlarge-EBS-Encrypted-48TB" ]} ]},
		"DynamicScripts": { "Fn::Equals":[ "1", "0" ] },
		"RunScripts": { "Fn::Equals":[ "1", "1" ] },
		"RaiseError": { "Fn::Equals":[ "1", "1" ] }
	},
	"Resources": {
		"MasterHostHandle" : { 
			"Type" : "AWS::CloudFormation::WaitConditionHandle"
		},
		"PasswordHandle" : { 
			"Type" : "AWS::CloudFormation::WaitConditionHandle"
		},
		"GPCCHandle" : { 
			"Type" : "AWS::CloudFormation::WaitConditionHandle"
		},
		"MasterHostOutput" : { 
			"Type" : "AWS::CloudFormation::WaitCondition", 
			"Condition":"EnableWaitConditions",
			"DependsOn" : "ClusterNodes", 
			"Properties" : { 
				"Handle" : { "Ref" : "MasterHostHandle" }, 
				"Timeout" : { "Fn::FindInMap" : [ "TimeoutMapping", { "Ref":"ClusterInstanceCount" } , "Timeout" ]},
				"Count":"1"
			} 
		},
		"PasswordOutput" : { 
			"Type" : "AWS::CloudFormation::WaitCondition", 
			"Condition":"EnableWaitConditions",
			"DependsOn" : "ClusterNodes", 
			"Properties" : { 
				"Handle" : { "Ref" : "PasswordHandle" }, 
				"Timeout" : { "Fn::FindInMap" : [ "TimeoutMapping", { "Ref":"ClusterInstanceCount" } , "Timeout" ]},
				"Count":"1"
			} 
		},
		"GPCCOutput" : { 
			"Type" : "AWS::CloudFormation::WaitCondition", 
			"Condition":"EnableWaitConditions",
			"DependsOn" : "ClusterNodes", 
			"Properties" : { 
				"Handle" : { "Ref" : "GPCCHandle" }, 
				"Timeout" : { "Fn::FindInMap" : [ "TimeoutMapping", { "Ref":"ClusterInstanceCount" } , "Timeout" ]},
				"Count":"1"
			} 
		},
		"InstanceIAMRole":{ 
			"Type":"AWS::IAM::Role",
			"Properties":{ 
				"AssumeRolePolicyDocument":{ 
					"Statement":[{ 
						"Action":[ "sts:AssumeRole" ], 
						"Effect":"Allow", 
						"Principal":{ "Service":[ "ec2.amazonaws.com" ] } 
					}], 
					"Version":"2012-10-17" 
				}, 
				"Path":"/", 
				"Policies": [{ 
					"PolicyDocument":{ 
						"Statement":[{ 
							"Action":[ "ec2:CreateTags", "ec2:DescribeTags", "ec2:DescribeInstances", "ec2:DescribeInstanceStatus", "ec2:DetachVolume", "ec2:AttachVolume", "ec2:DescribeVolumeStatus", "ec2:DeleteVolume", "ec2:DescribeVolumes", "ec2:CreateSnapshot", "ec2:DeleteSnapshot", "ec2:DescribeSnapshots", "ec2:CopySnapshot", "ec2:CreateVolume", "cloudformation:*", "ec2:AssociateAddress", "s3:Get*", "s3:Put*", "s3:List*", "autoscaling:*", "ssm:*" ], 
							"Effect":"Allow", "Resource":"*" 
						}] 
					}, 
					"PolicyName":"DescribeAccessEC2andCFN" 
				}] 
			} 
		},
		"InstanceProfile":{ 
			"Type":"AWS::IAM::InstanceProfile",
			"Properties":{ 
				"Path":"/", 
				"Roles":[ { "Ref":"InstanceIAMRole" } ] 
			} 
		},
		"ClusterCompleteHandle":{ 
			"Type":"AWS::CloudFormation::WaitConditionHandle" 
		},
		"ClusterCompleteCondition":{ 
			"Type":"AWS::CloudFormation::WaitCondition", 
			"Condition":"EnableWaitConditions", 
			"DependsOn":"ClusterNodes", 
			"Properties":{ 
				"Handle":{ "Ref":"ClusterCompleteHandle" }, 
				"Timeout" : { "Fn::FindInMap" : [ "TimeoutMapping", { "Ref":"ClusterInstanceCount" } , "Timeout" ]},
				"Count":{ "Ref":"ClusterInstanceCount" } 
			} 
		},
		"VPC": { 
			"Type": "AWS::EC2::VPC", 
			"Properties": { 
				"CidrBlock": "172.21.0.0/16", 
				"EnableDnsSupport": "true", 
				"EnableDnsHostnames": "true", 
				"InstanceTenancy": { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "Tenancy" ]},
				"Tags": [ { "Key": "Name", "Value": { "Ref":"AWS::StackName" } } ] 
			} 
		},
		"Subnet": { 
			"Type": "AWS::EC2::Subnet", 
			"DependsOn":"VPC",
			"Properties": { 
				"VpcId": { "Ref": "VPC" }, 
				"CidrBlock": "172.21.0.0/24", 
				"AvailabilityZone": { "Ref":"AvailabilityZone" },
				"Tags": [ { "Key": "Name", "Value": { "Ref":"AWS::StackName" } } ] 
			}
		},
		"SubnetRouteTableAssociation": { 
			"Type":"AWS::EC2::SubnetRouteTableAssociation", 
			"Properties": { 
				"SubnetId": { "Ref":"Subnet" }, 
				"RouteTableId": { "Ref":"RouteTable" } 
			}
		},
		"SecurityGroup": { 
			"Type": "AWS::EC2::SecurityGroup", 
			"DependsOn":"VPC",
			"Properties": { 
				"GroupDescription": "SecurityGroup", 
				"VpcId": { "Ref": "VPC" }, 
				"SecurityGroupIngress": [ 
					{ "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": { "Ref": "SSHLocation" } }, 
					{ "IpProtocol": "tcp", "FromPort": "5432", "ToPort": "5432", "CidrIp": { "Ref": "SSHLocation" } }, 
					{ "IpProtocol": "tcp", "FromPort": "28090", "ToPort": "28090", "CidrIp": { "Ref": "SSHLocation" } }, 
					{ "IpProtocol": "tcp", "FromPort": "28080", "ToPort": "28080", "CidrIp": { "Ref": "SSHLocation" } } 
				], 
				"Tags": [ { "Key": "Name", "Value": { "Ref":"AWS::StackName" } } ] 
			} 
		},
		"SecurityGroupPing": { 
			"Type": "AWS::EC2::SecurityGroupIngress", 
			"Properties": { 
				"GroupId": { "Ref": "SecurityGroup" }, 
				"IpProtocol": "icmp", 
				"FromPort": "8", 
				"ToPort": "-1", 
				"SourceSecurityGroupId": { "Ref": "SecurityGroup" } 
			} 
		},
		"SecurityGroupTCP": { 
			"Type": "AWS::EC2::SecurityGroupIngress", 
			"Properties": { 
				"GroupId": { "Ref": "SecurityGroup" }, 
				"IpProtocol": "tcp", 
				"FromPort": "0", 
				"ToPort": "65535", 
				"SourceSecurityGroupId": { "Ref": "SecurityGroup" } 
			}
		},
		"SecurityGroupUDP": { 
			"Type": "AWS::EC2::SecurityGroupIngress", 
			"Properties": { 
				"GroupId": { "Ref": "SecurityGroup" }, 
				"IpProtocol": "udp", 
				"FromPort": "0", 
				"ToPort": "65535", 
				"SourceSecurityGroupId": { "Ref": "SecurityGroup" } 
			} 
		},
		"InternetGateway": { 
			"Type": "AWS::EC2::InternetGateway", 
			"Properties": { 
				"Tags": [ { "Key": "Name", "Value": { "Ref":"AWS::StackName" } } ] 
			} 
		},
		"AttachGateway": { 
			"Type": "AWS::EC2::VPCGatewayAttachment", 
			"DependsOn" : "VPC", 
			"Properties": { 
				"VpcId": { "Ref": "VPC" }, 
				"InternetGatewayId": { "Ref": "InternetGateway" } 
			} 
		},
		"RouteTable": { 
			"Type": "AWS::EC2::RouteTable", 
			"DependsOn":"VPC",
			"Properties": { 
				"VpcId": { "Ref": "VPC" }, 
				"Tags": [ { "Key": "Name", "Value": { "Ref":"AWS::StackName" } } ] 
			} 
		},
		"Route": { 
			"Type": "AWS::EC2::Route", 
			"DependsOn":"AttachGateway",
			"Properties": { 
				"RouteTableId": { "Ref": "RouteTable" }, 
				"DestinationCidrBlock": "0.0.0.0/0", 
				"GatewayId": { "Ref": "InternetGateway" } 
			} 
		},
		"PlacementGroup": { 
			"Type": "AWS::EC2::PlacementGroup", 
			"Properties": { 
				"Strategy": "cluster" 
			} 
		},
		"ClusterNodes": { 
			"Type":"AWS::AutoScaling::AutoScalingGroup", 
			"DependsOn":"PlacementGroup",
			"Properties": { 
				"AvailabilityZones": [ {"Ref":"AvailabilityZone"} ],
				"VPCZoneIdentifier":[ { "Ref":"Subnet" } ], 
				"LaunchConfigurationName": { "Ref":"ClusterNodeLaunchConfig" },
				"MinSize": { "Ref":"ClusterInstanceCount" }, 
				"MaxSize": { "Ref":"ClusterInstanceCount" }, 
				"DesiredCapacity": { "Ref":"ClusterInstanceCount" }, 
				"PlacementGroup": { "Ref":"PlacementGroup" }, 
				"Tags":[ 
					{ "Key":"Name", "Value": { "Ref":"AWS::StackName" }, 
					"PropagateAtLaunch":"true" }
				]
			}, 
			"CreationPolicy": { 
				"ResourceSignal": { 
					"Count": { "Ref":"ClusterInstanceCount" }, 
					"Timeout" : { "Fn::FindInMap" : [ "TimeoutMapping", { "Ref":"ClusterInstanceCount" } , "CreationTimeout" ]}
				} 
			} 
		},
		"ElasticIP": {
			"Type":"AWS::EC2::EIP",
			"DependsOn":"VPC",
			"Properties": { 
				"Domain":"vpc"
			}
		},
		"ClusterNodeLaunchConfig": { 
			"Type":"AWS::AutoScaling::LaunchConfiguration", 
			"Properties" : { 
				"AssociatePublicIpAddress" : "true", 
				"EbsOptimized": "true",
				"PlacementTenancy": { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "Tenancy" ]},
				"InstanceType" : { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "Type" ]},
				"ImageId" : { "Fn::FindInMap":[ "AMIMapping", { "Ref":"AWS::Region" }, "64" ] },
				"SecurityGroups":[ { "Ref":"SecurityGroup" } ], 
				"KeyName": { "Ref":"KeyName" },
				"IamInstanceProfile":{ "Ref":"InstanceProfile" },
				"UserData": {
					"Fn::Base64": { 
						"Fn::Join": [ "", [
							"#!/bin/bash\n",
							"PATH+=\":/usr/local/bin\"\n",
							"export PATH\n",
							"echo 'SIGNAL_URL=\"", { "Ref":"ClusterCompleteHandle" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'MASTER_HOST_SIGNAL=\"", { "Ref":"MasterHostHandle" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'PASSWORD_SIGNAL=\"", { "Ref":"PasswordHandle" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'GPCC_SIGNAL=\"", { "Ref":"GPCCHandle" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'GPDB_RAID_GROUPS=\"", { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "RaidGroups" ]}, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'GPDB_SEGMENTS_PER_HOST=\"", { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "SegsPerHost" ]}, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'GP_VMEM_PROTECT_LIMIT=\"", { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "VmemProtectLimit" ]}, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'ALLOCATION_ID=\"", { "Fn::GetAtt" : [ "ElasticIP", "AllocationId" ]}, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							{"Fn::If" : [ "DynamicScripts", 
								"echo 'DYNAMIC_SCRIPTS=\"Yes\"' >> /opt/pivotal/greenplum/variables.sh\n",
								"echo 'DYNAMIC_SCRIPTS=\"No\"' >> /opt/pivotal/greenplum/variables.sh\n" ]
							},
							{"Fn::If" : [ "RunScripts", 
								"echo 'RUN_SCRIPTS=\"Yes\"' >> /opt/pivotal/greenplum/variables.sh\n",
								"echo 'RUN_SCRIPTS=\"No\"' >> /opt/pivotal/greenplum/variables.sh\n" ]
							},
							{"Fn::If" : [ "RaiseError", 
								"echo 'RAISE_ERROR=\"Yes\"' >> /opt/pivotal/greenplum/variables.sh\n",
								"echo 'RAISE_ERROR=\"No\"' >> /opt/pivotal/greenplum/variables.sh\n" ]
							},
							"echo 'INSTALL_GPCC=\"", { "Ref":"CommandCenter" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'INSTALL_MADLIB=\"", { "Ref":"MADlib" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'INSTALL_PLR=\"", { "Ref":"PLR" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"echo 'INSTALL_POSTGIS=\"", { "Ref":"PostGIS" }, "\"' >> /opt/pivotal/greenplum/variables.sh\n",
							"/opt/pivotal/greenplum/rollout.sh\n"
					  	]]
					}
				},
				"BlockDeviceMappings": [

					{ "DeviceName": "/dev/sda1", "Ebs": { "VolumeSize": 8, "DeleteOnTermination": true, "VolumeType": "gp2" } },

					{"Fn::If" : [ "UseEphemeral", 
						{ "DeviceName": "/dev/sdb", "VirtualName": "ephemeral0" },
						{ "DeviceName": "/dev/sdb", "Ebs": { "VolumeSize": {"Fn::If":["LargeDisk", 12000, 6000]}, "DeleteOnTermination": true, "VolumeType": "st1", "Encrypted": {"Fn::If" : ["IsEncrypted", true, false]}}}]},

					{"Fn::If" : [ "UseEphemeral", 
						{ "DeviceName": "/dev/sdc", "VirtualName": "ephemeral1" },
						{"Fn::If" : [ "NoDiskC", 
								{ "DeviceName": "/dev/sdc", "NoDevice": "true" },
								{ "DeviceName": "/dev/sdc", "Ebs": { "VolumeSize": {"Fn::If":["LargeDisk", 12000, 6000]}, "DeleteOnTermination": true, "VolumeType": "st1", "Encrypted": {"Fn::If" : ["IsEncrypted", true, false]}}}]} ]},

					{"Fn::If" : [ "UseEphemeral", 
						{ "DeviceName": "/dev/sdd", "VirtualName": "ephemeral2" },
						{"Fn::If" : [ "NoDiskD", 
								{ "DeviceName": "/dev/sdd", "NoDevice": "true" },
								{ "DeviceName": "/dev/sdd", "Ebs": { "VolumeSize": {"Fn::If":["LargeDisk", 12000, 6000]}, "DeleteOnTermination": true, "VolumeType": "st1", "Encrypted": {"Fn::If" : ["IsEncrypted", true, false]}}}]} ]},

					{"Fn::If" : [ "UseEphemeral", 
						{ "DeviceName": "/dev/sde", "VirtualName": "ephemeral3" },
						{"Fn::If" : [ "NoDiskE", 
								{ "DeviceName": "/dev/sde", "NoDevice": "true" },
								{ "DeviceName": "/dev/sde", "Ebs": { "VolumeSize": {"Fn::If":["LargeDisk", 12000, 6000]}, "DeleteOnTermination": true, "VolumeType": "st1", "Encrypted": {"Fn::If" : ["IsEncrypted", true, false]}}}]} ]},

					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdf", "VirtualName": "ephemeral4" }, { "DeviceName": "/dev/sdf", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdg", "VirtualName": "ephemeral5" }, { "DeviceName": "/dev/sdg", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdh", "VirtualName": "ephemeral6" }, { "DeviceName": "/dev/sdh", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdi", "VirtualName": "ephemeral7" }, { "DeviceName": "/dev/sdi", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdj", "VirtualName": "ephemeral8" }, { "DeviceName": "/dev/sdj", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdk", "VirtualName": "ephemeral9" }, { "DeviceName": "/dev/sdk", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdl", "VirtualName": "ephemeral10" }, { "DeviceName": "/dev/sdl", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdm", "VirtualName": "ephemeral11" }, { "DeviceName": "/dev/sdm", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdn", "VirtualName": "ephemeral12" }, { "DeviceName": "/dev/sdn", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdo", "VirtualName": "ephemeral13" }, { "DeviceName": "/dev/sdo", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdp", "VirtualName": "ephemeral14" }, { "DeviceName": "/dev/sdp", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdq", "VirtualName": "ephemeral15" }, { "DeviceName": "/dev/sdq", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdr", "VirtualName": "ephemeral16" }, { "DeviceName": "/dev/sdr", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sds", "VirtualName": "ephemeral17" }, { "DeviceName": "/dev/sds", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdt", "VirtualName": "ephemeral18" }, { "DeviceName": "/dev/sdt", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdu", "VirtualName": "ephemeral19" }, { "DeviceName": "/dev/sdu", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdv", "VirtualName": "ephemeral20" }, { "DeviceName": "/dev/sdv", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdw", "VirtualName": "ephemeral21" }, { "DeviceName": "/dev/sdw", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdx", "VirtualName": "ephemeral22" }, { "DeviceName": "/dev/sdx", "NoDevice": "true" } ] },
					{"Fn::If" : [ "UseEphemeral", { "DeviceName": "/dev/sdy", "VirtualName": "ephemeral23" }, { "DeviceName": "/dev/sdy", "NoDevice": "true" } ] },
					{ "DeviceName": "/dev/sdz", "Ebs": { "VolumeSize": { "Fn::FindInMap" : [ "InstanceTypeMapping", { "Ref":"ClusterNodeInstanceType" }, "Swap" ]}, "DeleteOnTermination": true, "VolumeType": "gp2" } }
				]
			}
		}
	}
}

